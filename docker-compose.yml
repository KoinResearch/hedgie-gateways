version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: ${PG_CONTAINER_NAME}
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

  collectors:
    build: .
    container_name: ${COLLECTORS_CONTAINER_NAME}
    environment:
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DATABASE=${PG_DATABASE}
      - DERIBIT_ENABLED=${DERIBIT_ENABLED}
      - OKX_ENABLED=${OKX_ENABLED}
      - BINANCE_ENABLED=${BINANCE_ENABLED}
      - BYBIT_ENABLED=${BYBIT_ENABLED}
      - CME_ENABLED=${CME_ENABLED}
      - COLLECTION_INTERVAL=${COLLECTION_INTERVAL}
      - LOG_LEVEL=${LOG_LEVEL}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:
